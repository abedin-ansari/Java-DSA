1. Reverse a String:

Problem Statement: Tumhe ek string di gayi hai, aur tumhe usko reverse karna hai.
Example: Input: "hello" -> Output: "olleh"

Key Concepts: String manipulation, loops.
Tip: StringBuilder ka reverse() method use kar sakte ho, ya manually loop through kar ke naya reversed string bana sakte ho.


2. Check for Palindrome:

Problem Statement: Ek string di gayi hai, check karo ki ye palindrome hai ya nahi (matlab forward aur backward dono same ho).
Example: Input: "madam" -> Output: true

Key Concepts: String manipulation, two-pointer technique.
Tip: String ko reverse kar ke original string se compare kar sakte ho.


3. Find Missing Number in Array:

Problem Statement: Tumhe ek array diya gaya hai jisme 1 se n tak ke numbers hain, but ek number missing hai. Tumhe wo missing number find karna hai.
Example: Input: [1, 2, 4, 5] -> Output: 3

Key Concepts: Array, mathematical formulas (sum of first n natural numbers).
Tip: sum of array elements ko calculate karo aur usko n*(n+1)/2 se minus kar do.


4. Find the First Non-Repeated Character in a String:
Problem Statement: Tumhe ek string di gayi hai, aur tumhe pehla aisa character find karna hai jo repeat na ho.
Example: Input: "swiss" -> Output: "w"

Key Concepts: HashMap ya array use kar ke frequency count karna.
Tip: Ek loop se frequency count karo aur phir ek aur loop se first non-repeated character ko return kar do.


5. Find Pair with Given Sum in Array:

Problem Statement: Tumhe ek array diya gaya hai, aur tumhe ek pair find karna hai jinka sum ek given value ke equal ho.
Example: Input: [2, 4, 3, 7], Sum = 10 -> Output: (3, 7)

Key Concepts: Arrays, HashSet ya HashMap.
Tip: Ek loop se elements ko traverse karo aur HashSet mein store karte jao. Agar Sum - current_element HashSet mein mil jaye, to wo pair return kar do.


6. Check if String has All Unique Characters:

Problem Statement: Tumhe ek string di gayi hai, check karo ki usme saare characters unique hain ya nahi.
Example: Input: "hello" -> Output: false

Key Concepts: Data structures like HashSet, arrays.
Tip: HashSet ya boolean array use kar ke check kar sakte ho. Agar koi character repeat ho raha hai to false return kar do.


7. Rotate Array by K Elements:

Problem Statement: Tumhe ek array diya gaya hai aur ek number K, tumhe array ko K positions se rotate karna hai.
Example: Input: [1, 2, 3, 4, 5], K = 2 -> Output: [4, 5, 1, 2, 3]

Key Concepts: Array manipulation, modular arithmetic.
Tip: Array ke elements ko divide kar ke do alag parts mein rotate kar sakte ho, ya phir directly rotate kar sakte ho using temporary array.


8. Merge Two Sorted Arrays:

Problem Statement: Tumhe do sorted arrays diye gaye hain, tumhe unko merge kar ke ek sorted array banana hai.
Example: Input: [1, 3, 5], [2, 4, 6] -> Output: [1, 2, 3, 4, 5, 6]

Key Concepts: Arrays, two-pointer technique.
Tip: Dono arrays ke elements ko compare kar ke naya array banate chalo jo sorted ho.


9. Find Duplicates in an Array:

Problem Statement: Tumhe ek array diya gaya hai, check karo usme koi duplicates hain ya nahi.
Example: Input: [1, 2, 3, 2] -> Output: true (2 is duplicate)

Key Concepts: HashSet, sorting.
Tip: HashSet ya sorting use karke easily duplicates find kar sakte ho.


10. Count Frequency of Characters in a String:

- **Problem Statement:** Tumhe ek string di gayi hai, usme har character ki frequency count karni hai.
- Example: Input: "apple" -> Output: a=1, p=2, l=1, e=1

- **Key Concepts:** HashMap ya array to store counts.
- **Tip:** HashMap mein har character ki frequency store kar lo aur phir usko output kar do.


Practice Tips:
Dry Run karo: Pehle manually dry run karo kisi bhi code ko likhne se pehle.
Edge Cases Consider karo: Jaise empty strings, negative numbers, etc.
Optimize karo: Pehle brute-force approach socho aur phir usko optimize karne ka try karo.